<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on 谷中仁的博客</title><link>https://guzhongren.github.io/categories/golang/</link><description>Recent content in Golang on 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 10 Sep 2019 10:52:24 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 依赖注入(Dependency Injection)</title><link>https://guzhongren.github.io/2019/09/golang-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5dependency-injection/</link><pubDate>Tue, 10 Sep 2019 10:52:24 +0800</pubDate><guid>https://guzhongren.github.io/2019/09/golang-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5dependency-injection/</guid><description>Dependency Injection 🧪 依赖注入是目前很多优秀框架都在使用的一个设计模式。 Dependency Injection 常常简称为：DI。它是实现控制反转（Inversion of Control – IoC）的一个模式。</description></item><item><title>Golang 基准测试(Benchmark)</title><link>https://guzhongren.github.io/2019/09/golang-%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95benchmark/</link><pubDate>Tue, 10 Sep 2019 09:56:24 +0800</pubDate><guid>https://guzhongren.github.io/2019/09/golang-%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95benchmark/</guid><description>Benchmark 🧪 基准测试是对计算机系统的性能的测试。 在程序中，基准测试，是一种测试代码性能的方法；比如有一个问题你有多种不同的方案，你想选择一种性能最好</description></item><item><title>Golang With SQLLite Practice</title><link>https://guzhongren.github.io/2019/09/golang-with-sqllite-practice/</link><pubDate>Sun, 01 Sep 2019 10:56:39 +0800</pubDate><guid>https://guzhongren.github.io/2019/09/golang-with-sqllite-practice/</guid><description>简介 目标 目的 Coding 目录结构 封装 error 函数 安装 SQLLite 库及其他库 申明 DB 全局变量 初始化数据库 用户模型构建及原子操作 用户模型 新增 删除 修改 查询 在应用中启动并调用用</description></item><item><title>Harbor 安装小记</title><link>https://guzhongren.github.io/2019/06/harbor-%E5%AE%89%E8%A3%85%E5%B0%8F%E8%AE%B0/</link><pubDate>Sun, 09 Jun 2019 14:32:13 +0800</pubDate><guid>https://guzhongren.github.io/2019/06/harbor-%E5%AE%89%E8%A3%85%E5%B0%8F%E8%AE%B0/</guid><description>场景 在搭建私有云环境时，我们需要将我们打包的镜像存储在局域网内，而不是把镜像推送到hub.docker.com；一方面是因为安全问题，另一方</description></item><item><title>Go Module 安装不了golang.org时的处理方式记录</title><link>https://guzhongren.github.io/2018/11/go-module-%E5%AE%89%E8%A3%85%E4%B8%8D%E4%BA%86golang.org%E6%97%B6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E8%AE%B0%E5%BD%95/</link><pubDate>Thu, 01 Nov 2018 21:46:40 +0800</pubDate><guid>https://guzhongren.github.io/2018/11/go-module-%E5%AE%89%E8%A3%85%E4%B8%8D%E4%BA%86golang.org%E6%97%B6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E8%AE%B0%E5%BD%95/</guid><description>1 2 3 4 5 go: golang.org/x/sys@v0.0.0-20180905080454-ebe1bf3edb33: unrecognized import path &amp;#34;golang.orgnrecognized import path &amp;#34;golang.org/x/sys&amp;#34; (https fetch: G1: dial tcp 216.239.37.1:443: conneet https://golang.org/x/sys?go-get=1: dial tcp 216.239.37.rty did not properly respond after1:443: connectex: A connection attempt failed because the connected host has failed to respoconnected party did not properly respond after a period of time, or established connection failed because connected : unrecognized import path &amp;#34;golang.host has failed to respond.) ... go:</description></item><item><title>Go Module 安装不了golang.org时的处理方式记录</title><link>https://guzhongren.github.io/2018/11/go-module-%E5%AE%89%E8%A3%85%E4%B8%8D%E4%BA%86golang.org%E6%97%B6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E8%AE%B0%E5%BD%95/</link><pubDate>Thu, 01 Nov 2018 21:46:40 +0800</pubDate><guid>https://guzhongren.github.io/2018/11/go-module-%E5%AE%89%E8%A3%85%E4%B8%8D%E4%BA%86golang.org%E6%97%B6%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E8%AE%B0%E5%BD%95/</guid><description>1 2 3 4 5 go: golang.org/x/sys@v0.0.0-20180905080454-ebe1bf3edb33: unrecognized import path &amp;#34;golang.orgnrecognized import path &amp;#34;golang.org/x/sys&amp;#34; (https fetch: G1: dial tcp 216.239.37.1:443: conneet https://golang.org/x/sys?go-get=1: dial tcp 216.239.37.rty did not properly respond after1:443: connectex: A connection attempt failed because the connected host has failed to respoconnected party did not properly respond after a period of time, or established connection failed because connected : unrecognized import path &amp;#34;golang.host has failed to respond.) ... go:</description></item></channel></rss>